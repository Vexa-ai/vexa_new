apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.botManager.name }}
  namespace: {{ .Values.namespace }}
  labels:
    app: {{ .Values.botManager.name }}
    component: api
spec:
  replicas: {{ .Values.botManager.replicaCount }}
  selector:
    matchLabels:
      app: {{ .Values.botManager.name }}
  template:
    metadata:
      labels:
        app: {{ .Values.botManager.name }}
        component: api
    spec:
      serviceAccountName: vexa-bot-manager
      containers:
        - name: {{ .Values.botManager.name }}
          image: {{ .Values.global.imageRegistry }}/{{ .Values.botManager.image.repository }}:{{ .Values.botManager.image.tag }}
          imagePullPolicy: {{ .Values.botManager.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          env:
            - name: NAMESPACE
              value: {{ .Values.namespace }}
            - name: BOT_IMAGE
              value: {{ .Values.global.imageRegistry }}/{{ .Values.bot.image.repository }}:{{ .Values.bot.image.tag }}
            - name: TRANSCRIPTION_SERVICE
              value: "http://{{ .Values.transcriptionService.name }}-service:{{ .Values.transcriptionService.service.port }}"
            - name: REDIS_URL
              value: "redis://{{ .Values.redis.name }}-service:{{ .Values.redis.service.port }}/0"
            - name: DB_HOST
              value: {{ .Values.postgres.name }}-service
            - name: DB_PORT
              value: "{{ .Values.postgres.service.port }}"
            - name: DB_NAME
              value: {{ .Values.postgres.database }}
            - name: DB_USER
              value: {{ .Values.postgres.username }}
            - name: DB_PASSWORD
              value: {{ .Values.postgres.password }}
          livenessProbe:
            httpGet:
              path: /
              port: http
            initialDelaySeconds: 30
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /
              port: http
            initialDelaySeconds: 5
            periodSeconds: 5
          resources:
            requests:
              cpu: {{ .Values.botManager.resources.requests.cpu }}
              memory: {{ .Values.botManager.resources.requests.memory }}
            limits:
              cpu: {{ .Values.botManager.resources.limits.cpu }}
              memory: {{ .Values.botManager.resources.limits.memory }} 